<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <PropertyGroup>
    <!-- The configuration and platform will be used to determine which assemblies to include from solution and
				 project documentation sources -->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a5724db3-0d1a-41f6-9df7-914dbd0fc9d2}</ProjectGuid>
    <SHFBSchemaVersion>1.9.9.0</SHFBSchemaVersion>
    <!-- AssemblyName, Name, and RootNamespace are not used by SHFB but Visual Studio adds them anyway -->
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <!-- SHFB properties -->
    <FrameworkVersion>.NET Portable Library 4.6</FrameworkVersion>
    <OutputPath>.\Help\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <Language>en-US</Language>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <HelpFileFormat>Website</HelpFileFormat>
    <IndentHtml>True</IndentHtml>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <CppCommentsFixup>False</CppCommentsFixup>
    <CleanIntermediates>True</CleanIntermediates>
    <DocumentationSources>
      <DocumentationSource sourceFile="RealtimeFramework.Messaging\RealtimeFramework.Messaging.csproj" />
    </DocumentationSources>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="(global)" isDocumented="True">Realtime Cloud Messaging uses the Pub/Sub (publish/subscribe) messaging pattern, where senders of messages, called publishers, do not program the messages to be sent directly to specific receivers, called subscribers.
Instead, published messages are published to topic channels, without knowledge of what, if any, subscribers there may be. Similarly, subscribers express interest in one or more topic channels, and only receive messages that are of interest, without knowledge of what, if any, publishers there are.
This pattern provides greater network scalability and a more dynamic network topology.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="RealtimeFramework.Messaging" isDocumented="True">Realtime Cloud Messaging uses the Pub/Sub (publish/subscribe) messaging pattern, where senders of messages, called publishers, do not program the messages to be sent directly to specific receivers, called subscribers.
Instead, published messages are published to topic channels, without knowledge of what, if any, subscribers there may be. Similarly, subscribers express interest in one or more topic channels, and only receive messages that are of interest, without knowledge of what, if any, publishers there are.
This pattern provides greater network scalability and a more dynamic network topology.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="RealtimeFramework.Messaging.Exceptions" isDocumented="False">Realtime Cloud Messaging uses the Pub/Sub (publish/subscribe) messaging pattern, where senders of messages, called publishers, do not program the messages to be sent directly to specific receivers, called subscribers.
Instead, published messages are published to topic channels, without knowledge of what, if any, subscribers there may be. Similarly, subscribers express interest in one or more topic channels, and only receive messages that are of interest, without knowledge of what, if any, publishers there are.
This pattern provides greater network scalability and a more dynamic network topology.</NamespaceSummaryItem>
      <NamespaceSummaryItem name="RealtimeFramework.Messaging.Ext" isDocumented="True">Realtime Cloud Messaging uses the Pub/Sub (publish/subscribe) messaging pattern, where senders of messages, called publishers, do not program the messages to be sent directly to specific receivers, called subscribers.
Instead, published messages are published to topic channels, without knowledge of what, if any, subscribers there may be. Similarly, subscribers express interest in one or more topic channels, and only receive messages that are of interest, without knowledge of what, if any, publishers there are.
This pattern provides greater network scalability and a more dynamic network topology.</NamespaceSummaryItem>
    </NamespaceSummaries>
    <MaximumGroupParts>2</MaximumGroupParts>
    <NamespaceGrouping>False</NamespaceGrouping>
    <SyntaxFilters>Standard</SyntaxFilters>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <PresentationStyle>VS2013</PresentationStyle>
    <Preliminary>False</Preliminary>
    <NamingMethod>Guid</NamingMethod>
    <HelpTitle>Realtime Messaging Documentation for universal Windows apps</HelpTitle>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
  </PropertyGroup>
  <!-- There are no properties for these groups.  AnyCPU needs to appear in order for Visual Studio to perform
			 the build.  The others are optional common platform types that may appear. -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' ">
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' ">
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Windows">
      <HintPath>..\..\..\Program Files (x86)\Microsoft SDKs\Portable\v12.0\110C4FEFF2BA61C0746933A9ED6E248D\Windows.winmd</HintPath>
    </Reference>
  </ItemGroup>
  <!-- Import the SHFB build targets -->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
</Project>